{
  "source": "doc/api/documentation.md",
  "miscs": [
    {
      "textRaw": "About this Documentation",
      "name": "About this Documentation",
      "type": "misc",
      "desc": "<p>The goal of this documentation is to comprehensively explain the Node.js\nAPI, both from a reference as well as a conceptual point of view. Each\nsection describes a built-in module or high-level concept.</p>\n<p>Where appropriate, property types, method arguments, and the arguments\nprovided to event handlers are detailed in a list underneath the topic\nheading.</p>\n<p>Every <code>.html</code> document has a corresponding <code>.json</code> document presenting\nthe same information in a structured manner. This feature is\nexperimental, and added for the benefit of IDEs and other utilities that\nwish to do programmatic things with the documentation.</p>\n<p>Every <code>.html</code> and <code>.json</code> file is generated based on the corresponding\n<code>.md</code> file in the <code>doc/api/</code> folder in Node.js&#39;s source tree. The\ndocumentation is generated using the <code>tools/doc/generate.js</code> program.\nThe HTML template is located at <code>doc/template.html</code>.</p>\n<p>If you find an error in this documentation, please <a href=\"https://github.com/nodejs/node/issues/new\">submit an issue</a>\nor see <a href=\"https://github.com/nodejs/node/blob/master/CONTRIBUTING.md\">the contributing guide</a> for directions on how to submit a patch.</p>\n",
      "miscs": [
        {
          "textRaw": "Stability Index",
          "name": "Stability Index",
          "type": "misc",
          "desc": "<p>Throughout the documentation, you will see indications of a section&#39;s\nstability.  The Node.js API is still somewhat changing, and as it\nmatures, certain parts are more reliable than others.  Some are so\nproven, and so relied upon, that they are unlikely to ever change at\nall.  Others are brand new and experimental, or known to be hazardous\nand in the process of being redesigned.</p>\n<p>The stability indices are as follows:</p>\n<pre><code class=\"lang-txt\">Stability: 0 - Deprecated\nThis feature is known to be problematic, and changes may be planned. Do\nnot rely on it. Use of the feature may cause warnings to be emitted.\nBackwards compatibility across major versions should not be expected.\n</code></pre>\n<pre><code class=\"lang-txt\">Stability: 1 - Experimental\nThis feature is still under active development and subject to non-backwards\ncompatible changes, or even removal, in any future version. Use of the feature\nis not recommended in production environments. Experimental features are not\nsubject to the Node.js Semantic Versioning model.\n</code></pre>\n<p><em>Note</em>: Caution must be used when making use of <code>Experimental</code> features,\nparticularly within modules that may be used as dependencies (or dependencies\nof dependencies) within a Node.js application. End users may not be aware that\nexperimental features are being used, and therefore may experience unexpected\nfailures or behavioral changes when changes occur. To help avoid such surprises,\n<code>Experimental</code> features may require a command-line flag to explicitly enable\nthem, or may cause a process warning to be emitted. By default, such warnings\nare printed to <code>stderr</code> and may be handled by attaching a listener to the\n<code>process.on(&#39;warning&#39;)</code> event.</p>\n<pre><code class=\"lang-txt\">Stability: 2 - Stable\nThe API has proven satisfactory. Compatibility with the npm ecosystem\nis a high priority, and will not be broken unless absolutely necessary.\n</code></pre>\n"
        },
        {
          "textRaw": "JSON Output",
          "name": "json_output",
          "stability": 1,
          "stabilityText": "Experimental",
          "desc": "<p>Every HTML file in the markdown has a corresponding JSON file with the\nsame data.</p>\n<p>This feature was added in Node.js v0.6.12. It is experimental.</p>\n",
          "type": "misc",
          "displayName": "JSON Output"
        },
        {
          "textRaw": "Syscalls and man pages",
          "name": "syscalls_and_man_pages",
          "desc": "<p>System calls like open(2) and read(2) define the interface between user programs\nand the underlying operating system. Node functions which simply wrap a syscall,\nlike <code>fs.open()</code>, will document that. The docs link to the corresponding man\npages (short for manual pages) which describe how the syscalls work.</p>\n<p><strong>Note:</strong> some syscalls, like lchown(2), are BSD-specific. That means, for\nexample, that <code>fs.lchown()</code> only works on macOS and other BSD-derived systems,\nand is not available on Linux.</p>\n<p>Most Unix syscalls have Windows equivalents, but behavior may differ on Windows\nrelative to Linux and macOS. For an example of the subtle ways in which it&#39;s\nsometimes impossible to replace Unix syscall semantics on Windows, see <a href=\"https://github.com/nodejs/node/issues/4760\">Node\nissue 4760</a>.</p>\n",
          "type": "misc",
          "displayName": "Syscalls and man pages"
        }
      ]
    }
  ]
}
